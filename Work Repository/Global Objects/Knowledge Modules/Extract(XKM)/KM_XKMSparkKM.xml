<?xml version="1.0" encoding="UTF-8"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.08" IsLegacyIdCompatible="false" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="" keyVect="CmEj+jsdVARafEExTBMr4g==" exportKeySalt="2a51ceec-0ea9-425b-bfed-5f6e4b210141" containsCipherText="false"/>
<Object class="com.sunopsis.dwg.dbobj.SnpTrt">
		<Field name="CleanupOnError" type="java.lang.String">null</Field>
	<Field name="CompType" type="java.lang.String"><![CDATA[AP]]></Field>
	<Field name="DelegateClass" type="java.lang.String"><![CDATA[SparkKM]]></Field>
	<Field name="DelegateScript" type="java.lang.String"><![CDATA[

import oracle.odi.domain.odireference.*
import oracle.odi.domain.adapter.*
import oracle.odi.domain.adapter.topology.*
import oracle.odi.domain.adapter.relational.*
import oracle.odi.domain.adapter.project.*
import oracle.odi.domain.adapter.project.IKnowledgeModule.ProcessingType
import oracle.odi.domain.mapping.*
import oracle.odi.domain.mapping.component.*
import oracle.odi.domain.mapping.physical.*
import oracle.odi.domain.mapping.generator.*
import oracle.odi.domain.mapping.exception.*
import oracle.odi.domain.project.*
import oracle.odi.domain.model.*
import oracle.odi.mapping.generation.*
import oracle.odi.mapping.generation.spark.*
import oracle.odi.domain.topology.*
import oracle.odi.km.exception.OdiKMException
import oracle.odi.domain.topology.AbstractOdiDataServer.IConnectionSettings
import oracle.odi.domain.topology.AbstractOdiDataServer.JdbcSettings
import oracle.odi.mapping.generation.AbstractSyntaxTree.ASTProducerMethod;
import oracle.odi.domain.mapping.generator.KMGeneratorDelegateRegistry.GeneratorDelegateClass;

@GeneratorDelegateClass(componentType="AP", descriptionKey="GeneratorDelegateClass.SparkKM")
	public class SparkKM extends GroovyComponentGeneratorDelegateBase {
		protected GeneratorContext generatorContext;
		protected IMapComponent component;
		protected MapPhysicalNode physicalNode;
		
		
		public void setBinding(Binding binding) {
		 	
            Map variables = binding.getVariables();
		 	if (variables.containsKey("component")) {
              component =  binding.getVariable("component");
            }
		 	
		 	if (variables.containsKey("physicalNode")) {
              physicalNode =  binding.getVariable("physicalNode");
            }
          
        	  if (variables.containsKey("generatorContext")) {
              generatorContext =  (GeneratorContext)binding.getVariable("generatorContext");
            }
		 } 
		 
		 String getOptionValue(String optionName) throws AdapterException, GenerationException, oracle.odi.domain.mapping.exception.MappingException {
	        String value = physicalNode.getKMOptionValueString(optionName);
	        if (value != null && !value.equals("")) {
	            return value;
	        }
	        return null;
		 }
		   public void generateOdiOsCommand(MapPhysicalNode physicalNode, Binding variables) {
                String sparkPyExecFile;
                String sparkPyExecFileName;
                String sparkPyOutFile;
                String sparkPyErrFile;
                String sparkPyWorkDir;
                String mappingName     =  MappingUtils.generateValidName(physicalNode.getRootContainer().getName(), false, true, MapComponent.NAME_MAX_LENGTH);
                String mappingNameLong =  MappingUtils.generateValidName(physicalNode.getRootContainer().getName()+"_"+physicalNode.getPhysicalDesign().getName(), false, true, MapComponent.NAME_MAX_LENGTH);
                String sparkHome       =  null;
                
                def sparkExecutionUnit = physicalNode.getUpstreamConnectedNodes().get(0).getExecutionUnit()
                def logicalSchemaName  = sparkExecutionUnit.getLocation().getLogicalSchema().getName()
                def ekmOptions         = SparkUtils.getEKMOptions(sparkExecutionUnit)
                def includeJdbcJars    = generatorContext.getObject("mapping.spark.includeJdbcJars");
                    includeJdbcJars    = (includeJdbcJars != null && (includeJdbcJars instanceof Boolean ) && includeJdbcJars != false ) ? true : false;
                
                String sparkPyExecFile_groovy =sprintf('''<?{
                    String evalKMOption(optionValue, propertyName ) {
                        return ("<fromEUDataServer>".equals(optionValue) || "null".equals(optionValue))? odiRef.getDataServerPropertyFromLSchema(propertyName, "%1$s") : optionValue;
                    }
                    
                    String sparkPyExecFile = null;
                    
                    String  workDir          = odiRef.getDataServerPropertyFromLSchema("spark-work-dir", "%1$s");
                    String  sparkMaster      = odiRef.getDataServerInfo("DSERV_NAME", "%1$s");
                            sparkMaster      = (sparkMaster == null || sparkMaster.length() == 0) ? "local[2]" : sparkMaster;
                    boolean isModeStandalone = sparkMaster.startsWith("spark:");
                    boolean isModeYarn       = sparkMaster.startsWith("yarn");
                    String  pyfiles          = evalKMOption( "''' + ekmOptions.get("py-files") + '''", "py-files" );
                            pyfiles          = ((pyfiles != null && pyfiles.length()>0) ? (pyfiles+",") : "") + workDir +"/pyspark_ext.py";
                    String  files            = evalKMOption( "''' + ekmOptions.get("files") + '''", "files" );
                    String  deployMode       = odiRef.getDataServerPropertyFromLSchema("deploy-mode", "%1$s");
                    boolean isDeployClient   = sparkMaster.endsWith("client")  || deployMode.equals("client");
                    boolean isDeployCluster  = sparkMaster.endsWith("cluster") || deployMode.equals("cluster");
                    String  executorMem      = evalKMOption( "''' + ekmOptions.get("executor-memory") + '''", "executor-memory" );
                    String  driverCores      = evalKMOption( "''' + ekmOptions.get("driver-cores") + '''", "driver-cores" );
                    String  yarnExecCores    = evalKMOption( "''' + ekmOptions.get("executor-cores") + '''", "executor-cores" ); 
                    String  yarnNumExec      = evalKMOption( "''' + ekmOptions.get("num-executors") + '''", "num-executors" ); 
                    String  yarnPrincipal    = evalKMOption( "''' + ekmOptions.get("principal") + '''", "principal" ); 
                    String  yarnKeyTab       = evalKMOption( "''' + ekmOptions.get("keytab") + '''", "keytab" ); 
                    String  sparkHome        = odiRef.getDataServerPropertyFromLSchema("spark-home-dir", "%1$s"); 
                    
                    String  driverClassPath   = evalKMOption( "''' + ekmOptions.get("driver-class-path") + '''", "driver-class-path" ); 
                    String  driverJavaOptions = evalKMOption( "''' + ekmOptions.get("driver-java-options") + '''", "driver-java-options" );
                    String  driverLibraryPath = evalKMOption( "''' + ekmOptions.get("driver-library-path") + '''", "driver-library-path" ); 
                    String  driverMemory      = evalKMOption( "''' + ekmOptions.get("driver-memory") + '''", "driver-memory" ); 
                    String  executorClassPath = ""; // deprecated spark property
                    String  jars              = evalKMOption( "''' + ekmOptions.get("jars") + '''", "jars" );
                    
                    // Does this mapping use any SQL KMs and therefore require JDBC jars?
                    if ( ''' + includeJdbcJars + ''' ) {
                           jarsJdbc  = odiRef.listOdiSparkLib();
                           jarsJdbcA = jarsJdbc.split(java.util.regex.Pattern.quote(","));
                           for ( int i = 0; i < jarsJdbcA.length; i++ ) {
                               String fullFileName = jarsJdbcA[i];
                               String fileName = new File(jarsJdbcA[i]).getName();
                               // Adding jars to --jars is not required for yarn-cluster mode and for yarn-client, but this might change in later 
                               // Spark versions when a few yarn deployment related bugs get fixed.
                               // So just in case we keep adding them on --jars, as well:
                               jars              += ((jars != null && jars.length()>0) ? "," : "") + fullFileName;
                               pyfiles           += ((pyfiles != null && pyfiles.length()>0) ? "," : "") + fullFileName;
                               executorClassPath += ((executorClassPath != null && executorClassPath.length()>0) ? ":" : "") + fileName;
                               if ( isModeYarn && isDeployCluster ) {
                                   driverClassPath   += ((driverClassPath != null && driverClassPath.length()>0) ? ":" : "") + fileName;
                               } else {
                                   driverClassPath   += ((driverClassPath != null && driverClassPath.length()>0) ? ":" : "") + fullFileName;
                               }
                           };
                    };
                    
                    String propertiesFile     = evalKMOption( "''' + ekmOptions.get("properties-file") + '''", "properties-file" ); 
                    String conf               = evalKMOption( "''' + ekmOptions.get("conf") + '''", "conf" );
                    String verbose            = evalKMOption( "''' + ekmOptions.get("verbose") + '''", "verbose" );
                    String yarnQueue          = evalKMOption( "''' + ekmOptions.get("queue") + '''", "queue" );
                    String totalExecutorCores = evalKMOption( "''' + ekmOptions.get("total-executor-cores") + '''", "total-executor-cores" ); 

                         
                    sparkPyExecFile = sparkHome + "/bin/"  + "spark-submit --master " + sparkMaster;
                    if (deployMode != null && deployMode.length() > 0) { //deploy mode
                       sparkPyExecFile = sparkPyExecFile + " --deploy-mode " + deployMode;
                    }				  
                    if (pyfiles != null && pyfiles.length() > 0) { //more python files
                        sparkPyExecFile = sparkPyExecFile + " --py-files " + pyfiles;
                    }
                    if (files != null && files.length() > 0) { //more  files to put into working dir
                        sparkPyExecFile = sparkPyExecFile + " --files " +  files;
                    }
                    if (executorMem != null && executorMem.length() > 0) { //executor-memory
                        sparkPyExecFile = sparkPyExecFile + " --executor-memory " + executorMem;
                    }
                    if (propertiesFile != null && propertiesFile.length() > 0) { //properties-file
                        sparkPyExecFile = sparkPyExecFile + " --properties-file " + propertiesFile;
                    }
                    if (conf != null && conf.length() > 0) { //conf
                        sparkPyExecFile = sparkPyExecFile + " --conf " + conf;
                    }
                    if (verbose != null && verbose.length() > 0 && !verbose.equals("false")) { //verbose
                        sparkPyExecFile = sparkPyExecFile + " --verbose ";
                    }
                    if (driverClassPath != null && driverClassPath.length() > 0) { //driver-class-path
                        sparkPyExecFile = sparkPyExecFile + " --driver-class-path " + driverClassPath;
                    }
                    if (driverLibraryPath != null && driverLibraryPath.length() > 0) { //driver-library-path
                        sparkPyExecFile = sparkPyExecFile + " --driver-library-path " + driverLibraryPath;
                    }
                    if (driverJavaOptions != null && driverJavaOptions.length() > 0) { //driver-java-options
                        sparkPyExecFile = sparkPyExecFile + " --driver-java-options " + driverJavaOptions;
                    }
                    if (driverMemory != null && driverMemory.length() > 0) { //driver-memory
                        sparkPyExecFile = sparkPyExecFile + " --driver-memory " + driverMemory;
                    }
                    if (executorClassPath != null && executorClassPath.length() > 0) { //spark.executor.extraClassPath
                        sparkPyExecFile = sparkPyExecFile + " --conf spark.executor.extraClassPath=" + executorClassPath;
                    }
                    if (jars != null && jars.length() > 0) { //--jars
                        sparkPyExecFile = sparkPyExecFile + " --jars " + jars;
                    }
                    //Spark standalone with cluster only
                    if (sparkMaster.indexOf("spark:") >= 0 && deployMode != null && deployMode.indexOf("cluster") >= 0) {
                        if (driverCores != null && driverCores.length() > 0) { //driver-cores
                            sparkPyExecFile = sparkPyExecFile + " --driver-cores " + driverCores;
                         }
                     }
                    
                    //Spark standalone and Mesos only
                    if (sparkMaster.indexOf("spark:") >= 0 || sparkMaster.indexOf("mesos:") >= 0) {
                        if (totalExecutorCores != null && totalExecutorCores.length() > 0) { //total-executor-cores
                            sparkPyExecFile = sparkPyExecFile + " --total-executor-cores " + totalExecutorCores;
                        }
                    }
                    //Yarn only
                    if (sparkMaster.indexOf("yarn") >= 0) {
                        if (yarnExecCores != null && yarnExecCores.length() > 0) { //executor-cores
                            sparkPyExecFile = sparkPyExecFile + " --executor-cores " + yarnExecCores;
                        }
                        if (driverCores != null && driverCores.length() > 0) { //driver-cores
                            sparkPyExecFile = sparkPyExecFile + " --driver-cores " + driverCores;
	                    }
                        if (yarnNumExec != null && yarnNumExec.length() > 0) { //deploy mode
                            sparkPyExecFile = sparkPyExecFile + " --num-executors " + yarnNumExec;
                        }
                        if (yarnPrincipal != null && yarnPrincipal.length() > 0) { //principal
                            sparkPyExecFile = sparkPyExecFile + " --principal " + yarnPrincipal;
                        }
                        if (yarnKeyTab != null && yarnKeyTab.length() > 0) { //key tab
                            sparkPyExecFile = sparkPyExecFile + " --keytab " + yarnKeyTab;
                        }
                        if (yarnQueue != null && yarnQueue.length() > 0) { //queue
                            sparkPyExecFile = sparkPyExecFile + " --queue " + yarnQueue;
                        }
                    }
                  
                    sparkPyExecFile = sparkPyExecFile + " " + workDir + "/"+"%2$s"+".py" ;// default  generated mapping code will be in /tmp
				    out.print(sparkPyExecFile);
				}?>''',[logicalSchemaName,mappingNameLong]);
				  
                String workDir_groovy = sprintf('''<?{out.print(odiRef.getDataServerPropertyFromLSchema("spark-work-dir", "%1$s"));}?>''', [logicalSchemaName,mappingNameLong])
                
                String odiExecutionMode_groovy = sprintf('''<?{
                    String optionValue = "''' + ekmOptions.get("odi-execution-mode") + '''";
                    String odiExecutionMode = ("<fromEUDataServer>".equals(optionValue)|| "null".equals(optionValue))? odiRef.getDataServerPropertyFromLSchema("odi-execution-mode", "%1$s") : optionValue;
                    odiExecutionMode = (odiExecutionMode == null || odiExecutionMode.length()== 0 || !odiExecutionMode.equals("ASYNC")) ? "SYNC" : "ASYNC";
                    out.print(odiExecutionMode);
                }?>''', [logicalSchemaName])

                String sparkEventLogEnabled_groovy = sprintf('''<?{
                    String optionValue    = "''' + ekmOptions.get("spark.eventLog.enabled") + '''";
                    String resultingValue = ("<fromEUDataServer>".equals(optionValue)|| "null".equals(optionValue))? odiRef.getDataServerPropertyFromLSchema("spark.eventLog.enabled", "%1$s") : optionValue;
                    out.print(resultingValue);
                }?>''', [logicalSchemaName])

				  
                sparkPyExecFileName = workDir_groovy + "/" + mappingNameLong + ".py" ;
                sparkPyOutFile      = workDir_groovy + "/" + mappingNameLong +".out" ;
                sparkPyErrFile      = workDir_groovy + "/" + mappingNameLong +".err" ;
                sparkPyWorkDir      = workDir_groovy  ;
				
                variables.setVariable("sparkpyExecFileName",  sparkPyExecFileName);
                variables.setVariable("sparkPyExecFile",      sparkPyExecFile_groovy);
                variables.setVariable("sparkPyOutFile",       sparkPyOutFile);
                variables.setVariable("sparkPyErrFile",       sparkPyErrFile);
                variables.setVariable("sparkPyWorkDir",       sparkPyWorkDir);
                variables.setVariable("odiExecutionMode",     odiExecutionMode_groovy);
                variables.setVariable("sparkEventLogEnabled", sparkEventLogEnabled_groovy);
                variables.setVariable("logicalSchemaName", logicalSchemaName);
		}
		
		   public void generateDeployJdbcJars(MapPhysicalNode physicalNode, Binding variables) {
                String jarKeys;                
                def sparkExecutionUnit = physicalNode.getUpstreamConnectedNodes().get(0).getExecutionUnit()
                def logicalSchemaName  = sparkExecutionUnit.getLocation().getLogicalSchema().getName()
                def ekmOptions         = SparkUtils.getEKMOptions(sparkExecutionUnit)
                def includeJdbcJars    = generatorContext.getObject("mapping.spark.includeJdbcJars");
                    includeJdbcJars    = (includeJdbcJars != null && (includeJdbcJars instanceof Boolean ) && includeJdbcJars != false ) ? true : false;
                
                if (includeJdbcJars) {
                    String jarKeysJdbc_groovy =sprintf('''<?{
                        String evalKMOption(optionValue, propertyName ) {
                            return ("<fromEUDataServer>".equals(optionValue) || "null".equals(optionValue))? odiRef.getDataServerPropertyFromLSchema(propertyName, "%1$s") : optionValue;
                        }
                        
                        String jarKeysJdbc = evalKMOption( "''' + ekmOptions.get("jars-odi-jdbc") + '''", "jars-odi-jdbc" );
                        out.print( jarKeysJdbc );
                        }?>''', logicalSchemaName)
                    variables.setVariable("jarKeysJdbc",  jarKeysJdbc_groovy);
                }
		}
		
		public AbstractSyntaxTree getLKMStoreScript(SparkScript storeScript){
	        Set<String> targetNames = new HashSet<String>();
        
	        for (MapPhysicalNode targetNode: physicalNode.getAllDownstreamNodes()) {
	             if (!targetNode.isTargetNode() || targetNode.isAPNode()) {
	                  continue;
	             }
	             targetNames.add(targetNode.getLogicalComponentName());
	        }
	        storeScript.setDestinationTargets(targetNames);
	        	
        	
          Map<MapPhysicalNode, SparkScript> apStoreScripts = (Map<MapPhysicalNode, SparkScript>)generatorContext.getObject("mapping.store.scripts");
            
            if (apStoreScripts == null) {
            
                 apStoreScripts = new HashMap<MapPhysicalNode,SparkScript>();
            
                 MapPhysicalDesign physicalDesign = physicalNode.getPhysicalDesign();
                 List<ExecutionUnit> targetExeUnits = physicalDesign.getTargetExUnitList(); 
            
                 for (ExecutionUnit exUnit : targetExeUnits) {
                      
                      List<MapPhysicalNode> apNodes = exUnit.getAPNodes();
                      for (MapPhysicalNode apNode : apNodes) 
                            apStoreScripts.put(apNode, null);  
                            
                }
                            
                if (apStoreScripts.size() > 1) {
                
                   generatorContext.putObject("mapping.store.scripts", apStoreScripts);
                }
                else return storeScript;
                            
            }
            
            
            apStoreScripts.put(physicalNode, storeScript);
            
            boolean execCompleted = true;
            for (SparkScript pScript : apStoreScripts.values()) {
                if (pScript == null) {
                    execCompleted = false;
                    break;
                 }
            
            }
            
            if (execCompleted) {
            
                 SparkScript wrapperScript = new SparkScript(storeScript.getTemplateUtils(), null);
                 for (SparkScript pScript : apStoreScripts.values()) { 
                     wrapperScript.addChild(pScript);
                 }
                      
                 return wrapperScript;
            }else{
            		Map<MapPhysicalNode, Boolean> targetExec = (Map<MapPhysicalNode, Boolean>)generatorContext.getObject("mapping.target.exec");
      					if (targetExec == null)
              		targetExec = new HashMap<MapPhysicalNode,Boolean>();
              	targetExec.put(physicalNode,false);
             		generatorContext.putObject("mapping.target.exec", targetExec);	
              	return new NullTarget(); 
            }
    }

    public Boolean skipTask(){
        Map<MapPhysicalNode, Boolean> targetExec = (Map<MapPhysicalNode, Boolean>)generatorContext.getObject("mapping.target.exec");
        if (targetExec != null && targetExec.get(physicalNode) == false )
            return true;
        return false;
    }
    
    public Boolean skipDeployJarTask(){
        Boolean includeJdbcJars = (Boolean)generatorContext.getObject("mapping.spark.includeJdbcJars");
        if (skipTask() || includeJdbcJars==null || includeJdbcJars==false )
            return true;
        return false;
    }

		public String getSparkDataServerProperty(String propKey) throws oracle.odi.km.exception.OdiKMException {
		    String propValue = getSparkDataServerProperty(propKey, null);
			if (propValue == null) {
			    throw new oracle.odi.km.exception.OdiKMException('Property' + propKey + 'Cannot be found.');
			}
			return propValue;
		}
		
		public String getSparkDataServerProperty(String propKey, String defaultValue) {
			Map<String, String> sparkParams = getSparkDataServerProperties();
			return sparkParams.get(propKey) == null ? defaultValue : sparkParams.get(propKey);
		}
		
		protected Map<String, String> getSparkDataServerProperties() {
			Map<String, String> sparkParams = SparkUtils.getSparkDataServerProperties(physicalNode.getPhysicalDesign());
			if (System.getProperty("SPARK_MASTER") !=null) {
			    String serverInstanceName = System.getProperty("SPARK_MASTER");
			    sparkParams.put("serverInstanceName", serverInstanceName);
			}
			return sparkParams;
		}
		
		@ASTProducerMethod(processingType=ProcessingType.SOURCE, producedASTType=NullTarget.class, styleKey="ProcessingStyleKey.POST_LOAD_TAP")
		AbstractSyntaxTree POST_LOAD_TAP(SparkScript inputScript) {
			AbstractSyntaxTree result = new NullTarget();
			result.setUpstreamAST(inputScript);
			return  result;
		}
		
		public void supportDataFrames (String kmName, boolean enabled) {
		   if (SparkUtils.useDataFrames(physicalNode.getPhysicalDesign()) && !enabled) {
			throw new OdiKMException("ERROR : " + kmName + " does not support Spark DataFrames feature. Set Spark Execution Unit property spark.useDataFrames to false.");
		   }
		}
		
		public boolean isDataFramesEnabled () {
		   return SparkUtils.useDataFrames(physicalNode.getPhysicalDesign());
		}
	}
		

		]]></Field>
	<Field name="ExpectedAstClass" type="java.lang.String">null</Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2016-06-03 14:37:16.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUNOPSIS_INSTALL]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[739e7da4-f732-4455-8936-782fafe91869]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitEnd" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitMain" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapCleanup" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapEnd" type="java.lang.String">null</Field>
	<Field name="IndGenerateLoad" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndIsHidden" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndJrnMethod" type="java.lang.String">null</Field>
	<Field name="IndSuppSetBased" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IntgType" type="java.lang.String">null</Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[5]]></Field>
	<Field name="IsConcurrent" type="java.lang.String">null</Field>
	<Field name="IsSeeded" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IBaseCompKm" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IProject" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScBaseTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScOrigTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[106]]></Field>
	<Field name="ITxtDelTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtTrtTxt" type="com.sunopsis.sql.DbInt"><![CDATA[420]]></Field>
	<Field name="KimMultiDserver" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmDefault" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmLang" type="java.lang.String"><![CDATA[PYTHON]]></Field>
	<Field name="KmSrcLang" type="java.lang.String">null</Field>
	<Field name="KmSrcTechno" type="java.lang.String">null</Field>
	<Field name="KmTechno" type="java.lang.String"><![CDATA[SPARK_PYTHON]]></Field>
	<Field name="KmVersion" type="java.lang.String">null</Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2018-12-07 08:15:13.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUNOPSIS_INSTALL]]></Field>
	<Field name="LkmType" type="java.lang.String"><![CDATA[N]]></Field>
	<Field name="LChecksum" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LCode" type="java.lang.String">null</Field>
	<Field name="OggJkm" type="java.lang.String">null</Field>
	<Field name="OrdFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ProcType" type="java.lang.String"><![CDATA[N]]></Field>
	<Field name="ProdAstType" type="java.lang.String">null</Field>
	<Field name="RepGuid" type="java.lang.String">null</Field>
	<Field name="RepVersion" type="java.lang.String">null</Field>
	<Field name="ScriptPath" type="java.lang.String">null</Field>
	<Field name="ScOrigTrtTag" type="java.lang.String">null</Field>
	<Field name="Subtype" type="java.lang.String"><![CDATA[*]]></Field>
	<Field name="TrtName" type="java.lang.String"><![CDATA[SparkKM]]></Field>
	<Field name="TrtType" type="java.lang.String"><![CDATA[CK]]></Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
	<Field name="VLastDate" type="java.sql.Timestamp">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExitGroup">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[fe76bf2d-336b-423f-b83c-8264473ad977]]></Field>
	<Field name="GroupName" type="java.lang.String"><![CDATA[Performance]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[106]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[16]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1343]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7fd8a217-3a86-4631-85fe-a981a924e7da]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[106]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1344]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[357]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[16]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[Cache]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Cache RDD/DataFrame across operations after computation]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[53a75838-7ecb-4949-8395-dace50dd1e6d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1343]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return "show=true,enable=true";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Column description]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_COL_DESC]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_COL]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0d880372-4135-4900-85ee-feb888903f2e]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1344]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
Cache this RDD/DataFrame across operations after transform with this component for default storage level
or persist this RDD/DataFrame with an user defined storage level.

       ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[User Exit help]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_UE_HELP]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_USER_EXIT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1345]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d73407de-7729-4da1-8a7b-865686c0f1ae]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[106]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1346]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[1347]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[358]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[16]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[2]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[Default]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[Storage Level]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[The storage level to be used to cache data]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[D]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0bc524cc-76f1-4055-99bc-07b96a770591]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1345]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return options.getValue("Cache").equals("true")?"show=true,enable=true":"show=false,enable=false";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c9561ecb-78ff-4300-8bd2-4b657304f362]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1347]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Default, DISK_ONLY, DISK_ONLY_2, MEMORY_ONLY, MEMORY_ONLY_2, MEMORY_ONLY_SER, MEMORY_ONLY_SER_2, MEMORY_AND_DISK, MEMORY_AND_DISK_2, MEMORY_AND_DISK_SER, MEMORY_AND_DISK_SER_2]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Text value]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_VALUE]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_USER_EXIT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[040e90f8-0ac6-402d-8b7f-0ef2dba48578]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1346]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1348]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[003284dc-a508-4022-a1de-e6bd06faf925]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[106]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1349]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[359]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[16]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[3]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[Repartition]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Repartiton the rdd/dataframe after transform of this component]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1e045854-58d1-4bf3-b623-3f5164a593f9]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1348]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return (isStreaming)?"show=false,enable=false":"show=true,enable=true";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a7d4b149-e473-4a84-a17d-3c2b2b0db9cf]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1349]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
Increase or decrease the level of parallelism in this RDD/DataFrame. 

            ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1350]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ba5c3448-0998-4123-ac5d-609462618a48]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[106]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1351]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[360]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[16]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[4]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[default]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[Level of Parallelism]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Number of partitions]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f2b16945-5753-4599-a18a-7863b39c1691]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1350]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return (isStreaming)?"show=false,enable=false":"show=true,enable=true";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0001e32c-c44f-4469-a0c2-6d1953462d5d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1351]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
Number of partitions, default is 0. This parameter is used to invoke Spark function - repartition(numPartitions). 
This parameter is also used as the numPartition arugment of some transformations that triggers stage 
boundary such as join and sortBy. When default value is set, spark.default.parallelism will be used to
invoke repartition() function. 
            ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1352]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1a0df567-87d6-4c14-b84b-4a93f8cc1c02]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[106]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1353]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[361]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[16]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[5]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[Sort Partitions]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Sort partitions by a key function when repartitioning]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ef18a961-19b8-471f-9f48-20dbae8826a6]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1352]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return ((!isStreaming) && (options.getValue("Repartition").equals("true")))?"show=true,enable=true":"show=false,enable=false";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e04519a1-97b1-474c-87b9-c90f2bcae181]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1353]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
This option is only used when DataFrames are disabled.            

            ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1354]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[67427c60-34fd-4c93-86e5-aacd6d0094e8]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[106]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1355]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[1356]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[362]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[16]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[6]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[Ascending]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[Partition Sort Order]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Sort partitions order]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[D]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[45483b60-7a5c-4023-b060-8be8b7dc3636]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1354]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return ((!isStreaming) && (options.getValue("Sort Partitions").equals("true")))?"show=true,enable=true":"show=false,enable=false";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[eaffe004-cf05-40df-9d7f-fe1d49d6b85e]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1356]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Ascending, Descending]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6a900560-478e-495a-bf54-11ca591ada5d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1355]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
This option is only used when DataFrames are disabled.            

            ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1357]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c361647c-491a-42e9-8b4f-0f22108c6e03]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[106]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1358]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[1359]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[363]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[16]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[7]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[Partition Keys]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Define keys for partitions]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[T]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8fb63d8d-311f-4667-bc6d-734b684c105d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1357]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return ((!isStreaming) && (options.getValue("Repartition").equals("true")))?"show=true,enable=true":"show=false,enable=false";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2ea70914-f382-468f-aabe-835e4f043fc1]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1359]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b4124b2d-d0f7-4cb7-8b17-23f5ea8bbb0d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1358]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
This option is used to define partition keys. Partition key definition is comma separated attribute list. 
Given an example mapping which has two source tables:
   order
            \
            join -> filter -> tgt
            /  
order_detail

the partition key definition could be "order.year,order.month,order_detail.day", this will do repartioning based on year,month
columns of order table and day column of order_detail table.
If you apply Partition Keys on target node, use target node attributes without prefix to build the partition list.
For RDDs when partition key definition contains more than one column partition function must be provided. See option Partition Function

            ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1360]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e210b337-b0f2-4f8e-b6ff-606529ae9d42]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[106]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1361]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[1362]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[364]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[16]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[8]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[Partition Function]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Customized partitioning function]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[T]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[19eb77ed-10a7-49a5-a865-8db950db9230]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1360]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return ((!isStreaming) && (options.getValue("Repartition").equals("true")))?"show=true,enable=true":"show=false,enable=false";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f04ab8b3-a91c-410b-827d-99f14b950cc7]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1362]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5f3f7c09-a362-4f3d-950e-aa5c305c7601]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1361]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
This option is used to provide partitoining key transform function. This key transform function must be a python lambda
function. Default is RDD.portable_hash. Given a simple source to target example mapping- src -> filter -> tgt, and key 
definition is "src.year,src.month,src.day", partitioning function can be defined as "lambda x : x[0]*365+x[1]*31+x[2]". 
return values of partition function must be numbers.
This option is only used when DataFrames are disabled. 

            ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e259d59e-d15a-4ebe-b6ec-18a937a4312f]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[420]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Edit Command]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_TRT_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.420]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e259d59e-d15a-4ebe-b6ec-18a937a4312f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.106]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[739e7da4-f732-4455-8936-782fafe91869]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[SparkKM]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[7]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1344]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0d880372-4135-4900-85ee-feb888903f2e]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXITGROUP.16]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fe76bf2d-336b-423f-b83c-8264473ad977]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[SparkKM.Performance]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_USEREXITGROUP]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[7.11]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1343]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[53a75838-7ecb-4949-8395-dace50dd1e6d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1346]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[040e90f8-0ac6-402d-8b7f-0ef2dba48578]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1347]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c9561ecb-78ff-4300-8bd2-4b657304f362]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1345]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0bc524cc-76f1-4055-99bc-07b96a770591]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.105]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.111]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1349]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a7d4b149-e473-4a84-a17d-3c2b2b0db9cf]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1348]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1e045854-58d1-4bf3-b623-3f5164a593f9]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1351]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0001e32c-c44f-4469-a0c2-6d1953462d5d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1350]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f2b16945-5753-4599-a18a-7863b39c1691]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1353]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e04519a1-97b1-474c-87b9-c90f2bcae181]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1352]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ef18a961-19b8-471f-9f48-20dbae8826a6]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1355]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6a900560-478e-495a-bf54-11ca591ada5d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1356]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[eaffe004-cf05-40df-9d7f-fe1d49d6b85e]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1354]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[45483b60-7a5c-4023-b060-8be8b7dc3636]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.110]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1358]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b4124b2d-d0f7-4cb7-8b17-23f5ea8bbb0d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1359]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2ea70914-f382-468f-aabe-835e4f043fc1]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1357]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8fb63d8d-311f-4667-bc6d-734b684c105d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1361]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5f3f7c09-a362-4f3d-950e-aa5c305c7601]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1362]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f04ab8b3-a91c-410b-827d-99f14b950cc7]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1360]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[19eb77ed-10a7-49a5-a865-8db950db9230]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[21]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[18]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[21]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.08]]></Field>
</Object>
</SunopsisExport>
